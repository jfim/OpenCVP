/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package im.jeanfrancois.opencvp.nativeinterface.internal;

public class ExecutionModel {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public ExecutionModel(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ExecutionModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public SWIGTYPE_p_FilterChain createFilterChain() {
    long cPtr = opencvpJNI.ExecutionModel_createFilterChain(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FilterChain(cPtr, true);
  }

  public SWIGTYPE_p_FilterChain loadFilterChain(String path) {
    long cPtr = opencvpJNI.ExecutionModel_loadFilterChain(swigCPtr, this, path);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FilterChain(cPtr, true);
  }

  public void saveFilterChain(SWIGTYPE_p_FilterChain filterChain, String path) {
    opencvpJNI.ExecutionModel_saveFilterChain(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain), path);
  }

  public int getFilterChainInputPortCount(SWIGTYPE_p_FilterChain filterChain) {
    return opencvpJNI.ExecutionModel_getFilterChainInputPortCount(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain));
  }

  public int getFilterChainOutputPortCount(SWIGTYPE_p_FilterChain filterChain) {
    return opencvpJNI.ExecutionModel_getFilterChainOutputPortCount(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain));
  }

  public PortType getFilterChainInputPortType(SWIGTYPE_p_FilterChain filterChain, int portIndex) {
    return PortType.swigToEnum(opencvpJNI.ExecutionModel_getFilterChainInputPortType(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain), portIndex));
  }

  public PortType getFilterChainOutputPortType(SWIGTYPE_p_FilterChain filterChain, int portIndex) {
    return PortType.swigToEnum(opencvpJNI.ExecutionModel_getFilterChainOutputPortType(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain), portIndex));
  }

  public void setFilterChainImageInputPortData(SWIGTYPE_p_FilterChain filterChain, int portIndex, int width, int height, ImageDataType dataType, short[] data) {
    opencvpJNI.ExecutionModel_setFilterChainImageInputPortData(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain), portIndex, width, height, dataType.swigValue(), data);
  }

  public void executeFilterChain(SWIGTYPE_p_FilterChain filterChain) {
    opencvpJNI.ExecutionModel_executeFilterChain(swigCPtr, this, SWIGTYPE_p_FilterChain.getCPtr(filterChain));
  }

  public FilterLibraryVector getLoadedFilterLibraries() {
    return new FilterLibraryVector(opencvpJNI.ExecutionModel_getLoadedFilterLibraries(swigCPtr, this), true);
  }

  public static ExecutionModel getInstance() {
    return new ExecutionModel(opencvpJNI.ExecutionModel_getInstance(), false);
  }

}
